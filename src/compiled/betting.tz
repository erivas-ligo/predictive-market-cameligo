{ parameter
    (or (or (or (or (pair %addBet (nat %requested_event_id) (bool %team_one_bet))
                    (pair %addEvent
                       (string %name)
                       (string %videogame)
                       (timestamp %begin_at)
                       (timestamp %end_at)
                       (timestamp %modified_at)
                       (pair %opponents (string %team_one) (string %team_two))
                       (bool %is_finalized)
                       (option %is_draw bool)
                       (option %is_team_one_win bool)
                       (timestamp %start_bet_time)
                       (timestamp %closed_bet_time)))
                (or (address %changeManager) (address %changeOracleAddress)))
            (or (or (nat %finalizeBet)
                    (pair %getEvent (nat %requested_event_id) (address %callback)))
                (or (unit %switchPauseBetting) (unit %switchPauseEventCreation))))
        (or (pair %updateConfigType
               (pair (bool %is_betting_paused) (bool %is_event_creation_paused))
               (mutez %min_bet_amount)
               (nat %retained_profit_quota))
            (pair %updateEvent
               (nat %updated_event_id)
               (pair %updated_event
                  (string %name)
                  (string %videogame)
                  (timestamp %begin_at)
                  (timestamp %end_at)
                  (timestamp %modified_at)
                  (pair %opponents (string %team_one) (string %team_two))
                  (bool %is_finalized)
                  (option %is_draw bool)
                  (option %is_team_one_win bool)
                  (timestamp %start_bet_time)
                  (timestamp %closed_bet_time)
                  (bool %is_claimed))))) ;
  storage
    (pair (pair (pair (pair %bet_config
                         (pair (bool %is_betting_paused) (bool %is_event_creation_paused))
                         (mutez %min_bet_amount)
                         (nat %retained_profit_quota))
                      (big_map %events
                         nat
                         (pair (string %name)
                               (string %videogame)
                               (timestamp %begin_at)
                               (timestamp %end_at)
                               (timestamp %modified_at)
                               (pair %opponents (string %team_one) (string %team_two))
                               (bool %is_finalized)
                               (option %is_draw bool)
                               (option %is_team_one_win bool)
                               (timestamp %start_bet_time)
                               (timestamp %closed_bet_time)
                               (bool %is_claimed))))
                (big_map %events_bets
                   nat
                   (pair (map %bets_team_one address mutez)
                         (nat %bets_team_one_index)
                         (mutez %bets_team_one_total)
                         (map %bets_team_two address mutez)
                         (nat %bets_team_two_index)
                         (mutez %bets_team_two_total)))
                (nat %events_index))
          (pair (address %manager) (map %metadata string bytes))
          (address %oracle_address)) ;
  code { PUSH string "No Event with this ID" ;
         PUSH string "No Event Bets with this ID" ;
         PUSH string "Bet does not have an outcome yet on which team won" ;
         LAMBDA
           (pair address address)
           unit
           { UNPAIR ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Not the Manager of the contract" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair address address address)
           unit
           { UNPAIR 3 ;
             DIG 2 ;
             DUP 2 ;
             COMPARE ;
             NEQ ;
             DUG 2 ;
             COMPARE ;
             NEQ ;
             AND ;
             IF { PUSH string "Not the Manager or Oracle of the contract" ; FAILWITH }
                { UNIT } } ;
         LAMBDA
           (pair timestamp timestamp)
           unit
           { UNPAIR ;
             COMPARE ;
             GT ;
             IF { PUSH string "Event End Date can't be before Start Date" ; FAILWITH }
                { UNIT } } ;
         LAMBDA
           (pair timestamp timestamp)
           unit
           { UNPAIR ;
             COMPARE ;
             GT ;
             IF { PUSH string "Event Betting End Date can't be before Betting Start Date" ;
                  FAILWITH }
                { UNIT } } ;
         LAMBDA
           (pair timestamp timestamp)
           unit
           { UNPAIR ;
             COMPARE ;
             GT ;
             IF { PUSH string "Event Betting Start Date can't be after the Event Start Date" ;
                  FAILWITH }
                { UNIT } } ;
         LAMBDA
           (pair timestamp timestamp)
           unit
           { UNPAIR ;
             COMPARE ;
             GT ;
             IF { PUSH string "Event Betting End Date can't be after the Event End Date" ;
                  FAILWITH }
                { UNIT } } ;
         LAMBDA
           bool
           unit
           { IF { PUSH string "Bet is marked as finalized" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair address mutez nat)
           operation
           { UNPAIR 3 ;
             DIG 2 ;
             PUSH nat 100 ;
             SUB ;
             ABS ;
             PUSH nat 100 ;
             SWAP ;
             DIG 3 ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             SWAP ;
             CONTRACT unit ;
             IF_NONE { PUSH string "Not found" ; FAILWITH } {} ;
             SWAP ;
             UNIT ;
             TRANSFER_TOKENS } ;
         LAMBDA
           (pair (lambda (pair address mutez nat) operation)
                 (pair (map address mutez) mutez mutez nat))
           (list operation)
           { UNPAIR ;
             SWAP ;
             UNPAIR 4 ;
             NIL operation ;
             SWAP ;
             ITER { UNPAIR ;
                    DUP 4 ;
                    DUP 3 ;
                    PUSH nat 10000000 ;
                    MUL ;
                    EDIV ;
                    IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                    CAR ;
                    PUSH nat 10000000 ;
                    SWAP ;
                    DUP 7 ;
                    MUL ;
                    EDIV ;
                    IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                    CAR ;
                    DIG 2 ;
                    ADD ;
                    DUP 6 ;
                    SWAP ;
                    DIG 2 ;
                    PAIR 3 ;
                    DUP 6 ;
                    SWAP ;
                    EXEC ;
                    CONS } ;
             SWAP ;
             DIG 2 ;
             DIG 3 ;
             DIG 4 ;
             DROP 4 } ;
         DUP 2 ;
         APPLY ;
         LAMBDA
           (pair (lambda (pair address mutez nat) operation)
                 (pair (pair (map address mutez) nat mutez (map address mutez) nat mutez) nat))
           (list operation)
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             LAMBDA
               (pair (pair nat (lambda (pair address mutez nat) operation))
                     (pair (list operation) address mutez))
               (list operation)
               { UNPAIR ;
                 UNPAIR ;
                 DIG 2 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DIG 3 ;
                 DUG 2 ;
                 PAIR 3 ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 CONS } ;
             DUP 4 ;
             DUP 4 ;
             PAIR ;
             APPLY ;
             DIG 2 ;
             DIG 3 ;
             DROP 2 ;
             NIL operation ;
             DUP 3 ;
             CAR ;
             ITER { SWAP ; PAIR ; DUP 2 ; SWAP ; EXEC } ;
             DIG 2 ;
             GET 7 ;
             ITER { SWAP ; PAIR ; DUP 2 ; SWAP ; EXEC } ;
             SWAP ;
             DROP } ;
         DUP 3 ;
         APPLY ;
         DIG 2 ;
         DROP ;
         DIG 12 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DIG 11 ;
                 DROP 3 ;
                 IF_LEFT
                   { DIG 8 ;
                     DROP ;
                     IF_LEFT
                       { DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DIG 6 ;
                         DIG 7 ;
                         DROP 5 ;
                         DUP ;
                         CAR ;
                         DUP 3 ;
                         CDR ;
                         CDR ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         DIG 2 ;
                         DUP 2 ;
                         COMPARE ;
                         EQ ;
                         DUG 2 ;
                         COMPARE ;
                         EQ ;
                         OR ;
                         IF { PUSH string "The Manager and Oracle of the contract can not bet" ;
                              FAILWITH }
                            {} ;
                         AMOUNT ;
                         PUSH mutez 0 ;
                         SWAP ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "No Tez sent for betting" ; FAILWITH } {} ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Your bet cannot be lower than the minimum" ; FAILWITH } {} ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 2 ;
                         GET ;
                         IF_NONE { DIG 5 ; FAILWITH } { DIG 6 ; DROP } ;
                         DUP ;
                         GET 13 ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         NOW ;
                         DUP 2 ;
                         GET 19 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "Betting period has not started yet" ; FAILWITH } {} ;
                         NOW ;
                         SWAP ;
                         GET 21 ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Betting period has ended" ; FAILWITH } {} ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 2 ;
                         GET ;
                         IF_NONE { DIG 3 ; FAILWITH } { DIG 4 ; DROP } ;
                         DIG 2 ;
                         CDR ;
                         IF { DUP ;
                              CAR ;
                              SENDER ;
                              GET ;
                              IF_NONE
                                { DUP ;
                                  CAR ;
                                  AMOUNT ;
                                  SENDER ;
                                  PAIR 3 ;
                                  PUSH nat 1 ;
                                  DUP 3 ;
                                  GET 3 ;
                                  ADD ;
                                  SWAP ;
                                  UNPAIR 3 ;
                                  SWAP ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE }
                                { DUP 2 ;
                                  CAR ;
                                  AMOUNT ;
                                  DIG 2 ;
                                  ADD ;
                                  SOME ;
                                  SENDER ;
                                  PAIR 3 ;
                                  DUP 2 ;
                                  GET 3 ;
                                  SWAP ;
                                  UNPAIR 3 ;
                                  UPDATE } ;
                              AMOUNT ;
                              DUP 4 ;
                              GET 5 ;
                              ADD ;
                              DIG 3 ;
                              DIG 2 ;
                              UPDATE 1 ;
                              DIG 2 ;
                              UPDATE 3 ;
                              SWAP ;
                              UPDATE 5 }
                            { DUP ;
                              GET 7 ;
                              SENDER ;
                              GET ;
                              IF_NONE
                                { DUP ;
                                  GET 7 ;
                                  AMOUNT ;
                                  SENDER ;
                                  PAIR 3 ;
                                  PUSH nat 1 ;
                                  DUP 3 ;
                                  GET 9 ;
                                  ADD ;
                                  SWAP ;
                                  UNPAIR 3 ;
                                  SWAP ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE }
                                { DUP 2 ;
                                  GET 7 ;
                                  AMOUNT ;
                                  DIG 2 ;
                                  ADD ;
                                  SOME ;
                                  SENDER ;
                                  PAIR 3 ;
                                  DUP 2 ;
                                  GET 9 ;
                                  SWAP ;
                                  UNPAIR 3 ;
                                  UPDATE } ;
                              AMOUNT ;
                              DUP 4 ;
                              GET 10 ;
                              ADD ;
                              DIG 3 ;
                              DIG 2 ;
                              UPDATE 7 ;
                              DIG 2 ;
                              UPDATE 9 ;
                              SWAP ;
                              UPDATE 10 } ;
                         DUP 3 ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         SOME ;
                         DIG 4 ;
                         UPDATE ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR }
                       { DIG 2 ;
                         DIG 8 ;
                         DIG 9 ;
                         DROP 3 ;
                         DUP 2 ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         PAIR 3 ;
                         DIG 7 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         IF { PUSH string "Event Creation is currently paused" ; FAILWITH } {} ;
                         DUP ;
                         GET 7 ;
                         DUP 2 ;
                         GET 5 ;
                         PAIR ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         GET 20 ;
                         DUP 2 ;
                         GET 19 ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         GET 7 ;
                         DUP 2 ;
                         GET 19 ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         GET 7 ;
                         DUP 2 ;
                         GET 20 ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PUSH bool False ;
                         DUP 5 ;
                         GET 20 ;
                         DUP 6 ;
                         GET 19 ;
                         DUP 7 ;
                         GET 17 ;
                         DUP 8 ;
                         GET 15 ;
                         DUP 9 ;
                         GET 13 ;
                         DUP 10 ;
                         GET 11 ;
                         DUP 11 ;
                         GET 9 ;
                         DUP 12 ;
                         GET 7 ;
                         DUP 13 ;
                         GET 5 ;
                         DUP 14 ;
                         GET 3 ;
                         DIG 14 ;
                         CAR ;
                         PAIR 12 ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PUSH mutez 0 ;
                         PUSH nat 0 ;
                         EMPTY_MAP address mutez ;
                         PUSH mutez 0 ;
                         PUSH nat 0 ;
                         EMPTY_MAP address mutez ;
                         PAIR 6 ;
                         DUP 6 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         PUSH nat 1 ;
                         DIG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         ADD ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR } ;
                     PAIR }
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DIG 7 ;
                     DIG 9 ;
                     DIG 10 ;
                     DROP 8 ;
                     IF_LEFT
                       { DUP 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DUP 2 ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "New Manager address can't be the same as the current one" ;
                              FAILWITH }
                            {} ;
                         DUP 2 ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CAR }
                       { DUP 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 2 ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "New Oracle address can't be the same as the current one" ;
                              FAILWITH }
                            {} ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR } } ;
                 PAIR ;
                 NIL operation }
               { DIG 4 ;
                 DIG 5 ;
                 DIG 6 ;
                 DIG 7 ;
                 DIG 8 ;
                 DIG 9 ;
                 DROP 6 ;
                 IF_LEFT
                   { IF_LEFT
                       { DUP 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 2 ;
                         GET ;
                         IF_NONE { DIG 6 ; FAILWITH } { DIG 7 ; DROP } ;
                         PUSH string "Already been claimed" ;
                         PUSH bool False ;
                         DUP 3 ;
                         GET 22 ;
                         COMPARE ;
                         EQ ;
                         IF { DROP } { FAILWITH } ;
                         DUP ;
                         GET 13 ;
                         NOT ;
                         IF { PUSH string "Bet is not marked as finalized" ; FAILWITH } {} ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 3 ;
                         GET ;
                         IF_NONE { DIG 6 ; FAILWITH } { DIG 7 ; DROP } ;
                         NOW ;
                         DUP 3 ;
                         GET 7 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "Betting period has not ended yet" ; FAILWITH } {} ;
                         DUP 2 ;
                         GET 15 ;
                         IF_NONE { DUP 7 ; FAILWITH } {} ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 6 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 5 ;
                         PUSH bool True ;
                         UPDATE 22 ;
                         SOME ;
                         DIG 6 ;
                         UPDATE ;
                         DIG 2 ;
                         IF { DIG 3 ;
                              DIG 6 ;
                              DIG 7 ;
                              DROP 3 ;
                              SWAP ;
                              DIG 2 ;
                              PAIR ;
                              DIG 3 ;
                              SWAP ;
                              EXEC ;
                              DUP 3 ;
                              CDR ;
                              DUP 4 ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              DIG 4 ;
                              CAR ;
                              CAR ;
                              CAR }
                            { DIG 3 ;
                              GET 17 ;
                              IF_NONE { DIG 6 ; FAILWITH } { DIG 7 ; DROP } ;
                              PUSH mutez 0 ;
                              DUP 5 ;
                              GET 10 ;
                              COMPARE ;
                              EQ ;
                              PUSH mutez 0 ;
                              DUP 6 ;
                              GET 5 ;
                              COMPARE ;
                              EQ ;
                              OR ;
                              IF { DIG 2 ; DIG 6 ; DROP 3 ; PUSH nat 0 ; DIG 2 ; PAIR ; DIG 3 ; SWAP ; EXEC }
                                 { DIG 5 ;
                                   DROP ;
                                   IF { SWAP ;
                                        DUP 3 ;
                                        GET 10 ;
                                        DUP 4 ;
                                        GET 5 ;
                                        DIG 4 ;
                                        CAR ;
                                        PAIR 4 ;
                                        DIG 3 ;
                                        SWAP ;
                                        EXEC }
                                      { SWAP ;
                                        DUP 3 ;
                                        GET 5 ;
                                        DUP 4 ;
                                        GET 10 ;
                                        DIG 4 ;
                                        GET 7 ;
                                        PAIR 4 ;
                                        DIG 3 ;
                                        SWAP ;
                                        EXEC } } ;
                              DUP 3 ;
                              CDR ;
                              DUP 4 ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              DIG 4 ;
                              CAR ;
                              CAR ;
                              CAR } ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP }
                       { DIG 2 ;
                         DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DIG 6 ;
                         DROP 5 ;
                         DUP ;
                         CAR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 2 ;
                         GET ;
                         IF_NONE { DUP 4 ; FAILWITH } {} ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         GET ;
                         IF_NONE { DIG 3 ; FAILWITH } { DIG 4 ; DROP } ;
                         DIG 2 ;
                         CDR ;
                         CONTRACT %saveEvent
                           (pair (string %name)
                                 (string %videogame)
                                 (timestamp %begin_at)
                                 (timestamp %end_at)
                                 (timestamp %modified_at)
                                 (pair %opponents (string %team_one) (string %team_two))
                                 (bool %is_finalized)
                                 (option %is_draw bool)
                                 (option %is_team_one_win bool)
                                 (timestamp %start_bet_time)
                                 (timestamp %closed_bet_time)
                                 (map %bets_team_one address mutez)
                                 (nat %bets_team_one_index)
                                 (mutez %bets_team_one_total)
                                 (map %bets_team_two address mutez)
                                 (nat %bets_team_two_index)
                                 (mutez %bets_team_two_total)) ;
                         IF_NONE { PUSH string "Unknown contract" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DUP 3 ;
                         GET 10 ;
                         DUP 4 ;
                         GET 9 ;
                         DUP 5 ;
                         GET 7 ;
                         DUP 6 ;
                         GET 5 ;
                         DUP 7 ;
                         GET 3 ;
                         DIG 7 ;
                         CAR ;
                         DUP 9 ;
                         GET 21 ;
                         DUP 10 ;
                         GET 19 ;
                         DUP 11 ;
                         GET 17 ;
                         DUP 12 ;
                         GET 15 ;
                         DUP 13 ;
                         GET 13 ;
                         DUP 14 ;
                         GET 11 ;
                         CDR ;
                         DUP 15 ;
                         GET 11 ;
                         CAR ;
                         PAIR ;
                         DUP 15 ;
                         GET 9 ;
                         DUP 16 ;
                         GET 7 ;
                         DUP 17 ;
                         GET 5 ;
                         DUP 18 ;
                         GET 3 ;
                         DIG 18 ;
                         CAR ;
                         PAIR 17 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS } }
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 5 ;
                     DIG 6 ;
                     DIG 7 ;
                     DROP 5 ;
                     IF_LEFT
                       { DROP ;
                         DUP ;
                         CDR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         IF { DUP ;
                              CDR ;
                              DUP 2 ;
                              CAR ;
                              CDR ;
                              DUP 3 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              UNPAIR ;
                              CDR ;
                              PUSH bool False }
                            { DUP ;
                              CDR ;
                              DUP 2 ;
                              CAR ;
                              CDR ;
                              DUP 3 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              UNPAIR ;
                              CDR ;
                              PUSH bool True } }
                       { DROP ;
                         DUP ;
                         CDR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         IF { DUP ;
                              CDR ;
                              DUP 2 ;
                              CAR ;
                              CDR ;
                              DUP 3 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DUP ;
                              CDR ;
                              PUSH bool False ;
                              DIG 2 ;
                              CAR ;
                              CAR }
                            { DUP ;
                              CDR ;
                              DUP 2 ;
                              CAR ;
                              CDR ;
                              DUP 3 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DUP ;
                              CDR ;
                              PUSH bool True ;
                              DIG 2 ;
                              CAR ;
                              CAR } } ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation } } }
           { DIG 2 ;
             DIG 3 ;
             DIG 11 ;
             DIG 12 ;
             DROP 4 ;
             IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 DIG 6 ;
                 DIG 7 ;
                 DIG 9 ;
                 DROP 7 ;
                 DUP 2 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP 2 ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 3 }
               { DIG 8 ;
                 DROP ;
                 UNPAIR ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 PAIR 3 ;
                 DIG 9 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP 2 ;
                 GET 7 ;
                 DUP 3 ;
                 GET 5 ;
                 PAIR ;
                 DIG 8 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP 2 ;
                 GET 21 ;
                 DUP 3 ;
                 GET 19 ;
                 PAIR ;
                 DIG 7 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP 2 ;
                 GET 7 ;
                 DUP 3 ;
                 GET 19 ;
                 PAIR ;
                 DIG 6 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP 2 ;
                 GET 7 ;
                 DUP 3 ;
                 GET 21 ;
                 PAIR ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DUP 2 ;
                 GET ;
                 IF_NONE { DIG 4 ; FAILWITH } { DIG 5 ; DROP } ;
                 GET 13 ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP 3 ;
                 CDR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 4 ;
                 SOME ;
                 DIG 4 ;
                 UPDATE ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR } ;
             PAIR ;
             PAIR ;
             PAIR ;
             NIL operation } ;
         PAIR } ;
  view "getManager"
       unit
       (pair timestamp address)
       { CDR ; CDR ; CAR ; CAR ; NOW ; PAIR } ;
  view "getOracleAddress"
       unit
       (pair timestamp address)
       { CDR ; CDR ; CDR ; NOW ; PAIR } ;
  view "getBettingStatus"
       unit
       (pair timestamp bool)
       { CDR ; CAR ; CAR ; CAR ; CAR ; CAR ; NOW ; PAIR } ;
  view "getEventCreationStatus"
       unit
       (pair timestamp bool)
       { CDR ; CAR ; CAR ; CAR ; CAR ; CDR ; NOW ; PAIR } ;
  view "getEvent"
       nat
       (pair timestamp
             (string %name)
             (string %videogame)
             (timestamp %begin_at)
             (timestamp %end_at)
             (timestamp %modified_at)
             (pair %opponents (string %team_one) (string %team_two))
             (bool %is_finalized)
             (option %is_draw bool)
             (option %is_team_one_win bool)
             (timestamp %start_bet_time)
             (timestamp %closed_bet_time)
             (bool %is_claimed))
       { UNPAIR ;
         SWAP ;
         CAR ;
         CAR ;
         CDR ;
         SWAP ;
         GET ;
         IF_NONE { PUSH string "No Event with this ID" ; FAILWITH } {} ;
         NOW ;
         PAIR } }

